{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-27 22:17:53"}
{"level":"error","message":"Unable to connect to PostgreSQL database: getaddrinfo EAI_AGAIN postgres","name":"SequelizeConnectionError","original":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"parent":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"service":"chronocore-backend","stack":"SequelizeConnectionError: getaddrinfo EAI_AGAIN postgres\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-27 22:17:53"}
{"level":"error","message":"Failed to connect to databases: getaddrinfo EAI_AGAIN postgres","name":"SequelizeConnectionError","original":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"parent":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"service":"chronocore-backend","stack":"SequelizeConnectionError: getaddrinfo EAI_AGAIN postgres\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-27 22:17:53"}
{"level":"info","message":"[f271f3ee-1b40-489d-b2f7-8c1515cf2058] GET /api/users/leaderboard?type=karma&timeFrame=all&limit=10","service":"chronocore-backend","timestamp":"2025-05-27 22:18:12"}
{"level":"info","message":"[fd01d151-8c62-420b-b2ee-6e81030b6bdb] GET /api/users/leaderboard?type=karma&timeFrame=all&limit=10","service":"chronocore-backend","timestamp":"2025-05-27 22:18:12"}
{"level":"info","message":"[06d21697-876d-4067-ae9e-5e5e0feb4ee1] GET /api/users/leaderboard?type=karma&timeFrame=all&limit=10","service":"chronocore-backend","timestamp":"2025-05-27 22:18:16"}
{"level":"info","message":"[a57b84ce-1b76-401e-8b2b-d9d335610072] GET /api/users/leaderboard?type=karma&timeFrame=all&limit=10","service":"chronocore-backend","timestamp":"2025-05-27 22:18:16"}
{"level":"info","message":"[cdd37cd5-c76a-4103-88e4-6d7c48f10338] GET /","service":"chronocore-backend","timestamp":"2025-05-27 22:19:11"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 09:34:09"}
{"level":"error","message":"Unable to connect to PostgreSQL database: getaddrinfo EAI_AGAIN postgres","name":"SequelizeConnectionError","original":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"parent":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"service":"chronocore-backend","stack":"SequelizeConnectionError: getaddrinfo EAI_AGAIN postgres\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-28 09:34:09"}
{"level":"error","message":"Failed to connect to databases: getaddrinfo EAI_AGAIN postgres","name":"SequelizeConnectionError","original":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"parent":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"service":"chronocore-backend","stack":"SequelizeConnectionError: getaddrinfo EAI_AGAIN postgres\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-28 09:34:09"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 11:09:46"}
{"level":"error","message":"Unable to connect to PostgreSQL database: getaddrinfo EAI_AGAIN postgres","name":"SequelizeConnectionError","original":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"parent":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"service":"chronocore-backend","stack":"SequelizeConnectionError: getaddrinfo EAI_AGAIN postgres\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-28 11:09:46"}
{"level":"error","message":"Failed to connect to databases: getaddrinfo EAI_AGAIN postgres","name":"SequelizeConnectionError","original":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"parent":{"code":"EAI_AGAIN","errno":-3001,"hostname":"postgres","syscall":"getaddrinfo"},"service":"chronocore-backend","stack":"SequelizeConnectionError: getaddrinfo EAI_AGAIN postgres\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-28 11:09:46"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 15:06:36"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:06:37"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:06:37"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 15:17:12"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:17:12"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:17:12"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 15:39:58"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:39:59"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:39:59"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 15:42:07"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:42:07"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 15:42:07"}
{"level":"info","message":"Using individual parameters for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 16:11:16"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 16:12:12"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 16:12:12"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"kolashankar113\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":110,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"kolashankar113\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 16:12:12"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 16:35:19"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 16:35:20"}
{"level":"error","message":"Unable to connect to PostgreSQL database: database \"chronocore\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: database \"chronocore\" does not exist\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 16:35:20"}
{"level":"error","message":"Failed to connect to databases: database \"chronocore\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: database \"chronocore\" does not exist\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 16:35:20"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 16:47:16"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 16:47:30"}
{"level":"error","message":"Unable to connect to PostgreSQL database: database \"chronocore\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: database \"chronocore\" does not exist\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 16:47:30"}
{"level":"error","message":"Failed to connect to databases: database \"chronocore\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: database \"chronocore\" does not exist\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 16:47:30"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 17:01:24"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 17:01:25"}
{"level":"error","message":"Unable to connect to PostgreSQL database: database \"chronocore\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: database \"chronocore\" does not exist\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 17:01:25"}
{"level":"error","message":"Failed to connect to databases: database \"chronocore\" does not exist","name":"SequelizeConnectionError","original":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"parent":{"code":"3D000","file":"postinit.c","length":96,"line":"1032","name":"error","routine":"InitPostgres","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: database \"chronocore\" does not exist\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 17:01:25"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 17:03:10"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 17:03:11"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 17:03:13"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 17:03:15"}
{"level":"error","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:23:5)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:03:25"}
{"level":"error","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:23:5)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:03:25"}
{"level":"info","message":"[ecf315fc-53a1-4ec8-b9d2-ed20917b99d6] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 17:10:08"}
{"ip":"::1","level":"error","message":"ReferenceError: sequelize is not defined","method":"POST","path":"/api/auth/register","requestId":"ecf315fc-53a1-4ec8-b9d2-ed20917b99d6","service":"chronocore-backend","stack":"ReferenceError: sequelize is not defined\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:40:10)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 17:10:08"}
{"level":"info","message":"[63486fed-d38c-4bdc-91b9-365b0be8afa9] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-28 17:10:22"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 17:15:39"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 17:15:41"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 17:15:42"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 17:15:44"}
{"level":"error","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:23:5)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:15:50"}
{"level":"error","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:23:5)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:15:50"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 17:18:52"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 17:18:53"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 17:18:53"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 17:18:54"}
{"level":"error","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:23:5)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:19:00"}
{"level":"error","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:23:5)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:19:00"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 17:44:57"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 17:45:08"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 17:45:08"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 17:45:11"}
{"level":"warn","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:27:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 17:45:17"}
{"level":"info","message":"Continuing without MongoDB as it is not required","service":"chronocore-backend","timestamp":"2025-05-28 17:45:17"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-05-28 17:45:17"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 18:14:45"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 18:14:47"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 18:14:48"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 18:14:51"}
{"level":"warn","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:27:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 18:14:57"}
{"level":"info","message":"Continuing without MongoDB as it is not required","service":"chronocore-backend","timestamp":"2025-05-28 18:14:57"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-05-28 18:14:57"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:16:52"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:16:53"}
{"level":"error","message":"Unable to connect to PostgreSQL database: connect ECONNREFUSED 127.0.0.1:5433","name":"SequelizeConnectionRefusedError","original":{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-111,"port":5433,"syscall":"connect"},"parent":{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-111,"port":5433,"syscall":"connect"},"service":"chronocore-backend","stack":"SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:5433\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:133:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-28 22:16:53"}
{"level":"error","message":"Failed to connect to databases: connect ECONNREFUSED 127.0.0.1:5433","name":"SequelizeConnectionRefusedError","original":{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-111,"port":5433,"syscall":"connect"},"parent":{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-111,"port":5433,"syscall":"connect"},"service":"chronocore-backend","stack":"SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:5433\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:133:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorEvent (/home/lenovo/game/backend/node_modules/pg/lib/client.js:346:19)\n    at Connection.emit (node:events:518:28)\n    at Socket.reportStreamError (/home/lenovo/game/backend/node_modules/pg/lib/connection.js:57:12)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:169:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-28 22:16:53"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:18:17"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:18:18"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:18:20"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 22:18:22"}
{"level":"warn","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:27:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 22:18:28"}
{"level":"info","message":"Continuing without MongoDB as it is not required","service":"chronocore-backend","timestamp":"2025-05-28 22:18:28"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-05-28 22:18:28"}
{"level":"info","message":"[cdc859a4-ad61-418f-be8c-eb646c917e50] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-28 22:20:30"}
{"level":"info","message":"[6bc241f8-208f-4d99-b1f7-81502aabecd5] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 22:20:56"}
{"ip":"::1","level":"error","message":"TypeError: Cannot read properties of undefined (reading 'or')","method":"POST","path":"/api/auth/register","requestId":"6bc241f8-208f-4d99-b1f7-81502aabecd5","service":"chronocore-backend","stack":"TypeError: Cannot read properties of undefined (reading 'or')\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:41:23)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 22:20:56"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:22:35"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:22:39"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:22:39"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 22:22:47"}
{"level":"warn","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:27:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 22:22:52"}
{"level":"info","message":"Continuing without MongoDB as it is not required","service":"chronocore-backend","timestamp":"2025-05-28 22:22:52"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-05-28 22:22:52"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:23:20"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:23:22"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:23:22"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 22:23:28"}
{"level":"warn","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:27:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 22:23:34"}
{"level":"info","message":"Continuing without MongoDB as it is not required","service":"chronocore-backend","timestamp":"2025-05-28 22:23:34"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-05-28 22:23:34"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:33:58"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:33:59"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:34:00"}
{"level":"info","message":"Database models synchronized","service":"chronocore-backend","timestamp":"2025-05-28 22:34:06"}
{"level":"warn","message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-mwbslo-shard-0","stale":false,"type":"ReplicaSetNoPrimary"},"service":"chronocore-backend","stack":"MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n    at _handleConnectionErrors (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/home/lenovo/game/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async connectMongoDB (/home/lenovo/game/backend/src/config/mongodb.config.js:27:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:85:5)","timestamp":"2025-05-28 22:34:13"}
{"level":"info","message":"Continuing without MongoDB as it is not required","service":"chronocore-backend","timestamp":"2025-05-28 22:34:13"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-05-28 22:34:13"}
{"level":"info","message":"[736abdd1-eb64-4756-bc46-c3754d978782] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 22:35:18"}
{"ip":"::1","level":"error","message":"TypeError: Cannot read properties of undefined (reading 'findOne')","method":"POST","path":"/api/auth/register","requestId":"736abdd1-eb64-4756-bc46-c3754d978782","service":"chronocore-backend","stack":"TypeError: Cannot read properties of undefined (reading 'findOne')\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:39:37)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 22:35:18"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:38:04"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:38:05"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:38:05"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:38:05"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:38:05"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:42:58"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:42:58"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:42:58"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:42:59"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:42:59"}
{"level":"info","message":"[45889fc9-659a-47bf-a019-3a4ffa8f3fc2] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 22:43:57"}
{"ip":"::1","level":"error","message":"TypeError: Cannot read properties of undefined (reading 'or')","method":"POST","path":"/api/auth/register","requestId":"45889fc9-659a-47bf-a019-3a4ffa8f3fc2","service":"chronocore-backend","stack":"TypeError: Cannot read properties of undefined (reading 'or')\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:43:23)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 22:43:57"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:45:16"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:45:16"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:45:16"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:45:16"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:45:16"}
{"level":"info","message":"[20630277-577c-4c47-82b8-758ce0bb52ef] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 22:46:31"}
{"ip":"::1","level":"error","message":"TypeError: Cannot read properties of undefined (reading 'or')","method":"POST","path":"/api/auth/register","requestId":"20630277-577c-4c47-82b8-758ce0bb52ef","service":"chronocore-backend","stack":"TypeError: Cannot read properties of undefined (reading 'or')\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:43:23)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 22:46:31"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 22:47:45"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 22:47:46"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-28 22:47:46"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:47:46"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:55:7)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-28 22:47:46"}
{"level":"info","message":"[a19f3d08-6664-4968-8031-5cd592b3e28a] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 22:56:02"}
{"level":"info","message":"Attempting to register user: shannu, kolashankar113@gmail.com","service":"chronocore-backend","timestamp":"2025-05-28 22:56:02"}
{"level":"error","message":"Error checking for existing user: Cannot read properties of undefined (reading 'or')","service":"chronocore-backend","stack":"TypeError: Cannot read properties of undefined (reading 'or')\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:55:25)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 22:56:02"}
{"level":"info","message":"[ca0bc5a5-5ef8-424c-8eb9-fb0589ed2002] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-28 22:56:20"}
{"level":"info","message":"[231d32f5-bfac-46a1-84a0-9fe11fa89d19] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-28 22:56:31"}
{"level":"info","message":"[63ad493b-cc1f-417c-baad-e6f34a18c663] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-28 22:56:43"}
{"level":"info","message":"[7c6177af-a3a3-427f-88e5-67262168527d] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-28 22:57:16"}
{"level":"info","message":"Attempting to register user: kola, kolashankar423@gmail.com","service":"chronocore-backend","timestamp":"2025-05-28 22:57:16"}
{"level":"error","message":"Error checking for existing user: Cannot read properties of undefined (reading 'or')","service":"chronocore-backend","stack":"TypeError: Cannot read properties of undefined (reading 'or')\n    at register (/home/lenovo/game/backend/src/controllers/auth.controller.js:55:25)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/lenovo/game/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/home/lenovo/game/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /home/lenovo/game/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/home/lenovo/game/backend/node_modules/express/lib/router/index.js:47:12)","timestamp":"2025-05-28 22:57:16"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-28 23:01:51"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-28 23:01:51"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"postgres\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"postgres\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 23:01:51"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"postgres\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"postgres\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-28 23:01:51"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-29 14:34:08"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-29 14:34:27"}
{"level":"error","message":"Unable to connect to PostgreSQL database: password authentication failed for user \"postgres\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"postgres\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-29 14:34:30"}
{"level":"error","message":"Failed to connect to databases: password authentication failed for user \"postgres\"","name":"SequelizeConnectionError","original":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"parent":{"code":"28P01","file":"auth.c","length":104,"line":"321","name":"error","routine":"auth_failed","severity":"FATAL"},"service":"chronocore-backend","stack":"SequelizeConnectionError: password authentication failed for user \"postgres\"\n    at Client._connectionCallback (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:145:24)\n    at Client._handleErrorWhileConnecting (/home/lenovo/game/backend/node_modules/pg/lib/client.js:336:19)\n    at Client._handleErrorMessage (/home/lenovo/game/backend/node_modules/pg/lib/client.js:356:19)\n    at Connection.emit (node:events:518:28)\n    at /home/lenovo/game/backend/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/lenovo/game/backend/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/lenovo/game/backend/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)","timestamp":"2025-05-29 14:34:30"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-29 14:51:33"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-29 14:52:06"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-29 14:52:15"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-29 14:52:15"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-29 14:52:20"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:84:5)","timestamp":"2025-05-29 14:52:20"}
{"level":"info","message":"[09ae74b5-b402-4071-a803-39fe6ee83097] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-29 15:06:54"}
{"level":"info","message":"Attempting to register user: shannu, kolashankar113@gmail.com","service":"chronocore-backend","timestamp":"2025-05-29 15:06:54"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:07:08"}
{"level":"info","message":"[c57d34ba-f0e1-48fc-9509-669d2891c258] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:08:24"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c57d34ba-f0e1-48fc-9509-669d2891c258","service":"chronocore-backend","timestamp":"2025-05-29 15:08:25"}
{"level":"info","message":"[2ccd8963-1bdc-4762-a800-bb11500b5c25] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:08:25"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"2ccd8963-1bdc-4762-a800-bb11500b5c25","service":"chronocore-backend","timestamp":"2025-05-29 15:08:25"}
{"level":"info","message":"[6727b53a-5a3c-414d-ac6f-4e5635dc79bd] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:11:17"}
{"level":"info","message":"[3b45fd82-5f21-4a48-b5d7-52326615d3ce] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:11:19"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"3b45fd82-5f21-4a48-b5d7-52326615d3ce","service":"chronocore-backend","timestamp":"2025-05-29 15:11:19"}
{"level":"info","message":"[7de213f7-e6bf-4d1c-86e8-6a6582b7796b] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:11:19"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"7de213f7-e6bf-4d1c-86e8-6a6582b7796b","service":"chronocore-backend","timestamp":"2025-05-29 15:11:19"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:11:19"}
{"level":"info","message":"[b6bb259b-bf74-4811-a6fe-b5d4a078531b] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:11:36"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:11:37"}
{"level":"info","message":"[22e970cf-8dd9-4736-a8f6-000398ef65d2] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:11:37"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"22e970cf-8dd9-4736-a8f6-000398ef65d2","service":"chronocore-backend","timestamp":"2025-05-29 15:11:37"}
{"level":"info","message":"[c9a5fe93-dc30-4347-8054-c0a19ece5ed2] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:11:37"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c9a5fe93-dc30-4347-8054-c0a19ece5ed2","service":"chronocore-backend","timestamp":"2025-05-29 15:11:37"}
{"level":"info","message":"[88a09f90-1515-47ab-a77c-d0083c3dc194] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:11:49"}
{"level":"info","message":"[62f71a54-a8c2-4382-8e6b-9127acb52c37] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:11:50"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"62f71a54-a8c2-4382-8e6b-9127acb52c37","service":"chronocore-backend","timestamp":"2025-05-29 15:11:50"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:11:50"}
{"level":"info","message":"[a95a049c-5aab-4fe3-9dfa-49c80ff888e2] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:11:50"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"a95a049c-5aab-4fe3-9dfa-49c80ff888e2","service":"chronocore-backend","timestamp":"2025-05-29 15:11:50"}
{"level":"info","message":"[da5e0d66-7901-4d23-b215-0aaf8eedff24] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:12:01"}
{"level":"info","message":"[c16baa50-dfa6-456c-8231-77229905b9a2] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:12:02"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c16baa50-dfa6-456c-8231-77229905b9a2","service":"chronocore-backend","timestamp":"2025-05-29 15:12:02"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:12:02"}
{"level":"info","message":"[b07663ee-e397-4cb9-b7bf-f0424eb421eb] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:12:02"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"b07663ee-e397-4cb9-b7bf-f0424eb421eb","service":"chronocore-backend","timestamp":"2025-05-29 15:12:02"}
{"level":"info","message":"[b0350673-9b93-4e06-9986-daedaba6883c] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:13:59"}
{"level":"info","message":"[82f041b1-9c79-4593-9d00-13e7790e2a7d] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:13:59"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"82f041b1-9c79-4593-9d00-13e7790e2a7d","service":"chronocore-backend","timestamp":"2025-05-29 15:13:59"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:13:59"}
{"level":"info","message":"[2d8c90fa-d2a9-452e-82d1-770222ba7eb9] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:13:59"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"2d8c90fa-d2a9-452e-82d1-770222ba7eb9","service":"chronocore-backend","timestamp":"2025-05-29 15:13:59"}
{"level":"info","message":"[55cbf4b1-efa6-4a8f-af42-e4d1fbf97cf8] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:18:18"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:18:29"}
{"level":"info","message":"[58fad281-89c4-464a-9141-f361256466a4] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:18:32"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"58fad281-89c4-464a-9141-f361256466a4","service":"chronocore-backend","timestamp":"2025-05-29 15:18:32"}
{"level":"info","message":"[b772d33d-d5e3-4c18-8ae4-5012e2c37b43] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:18:32"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'a5393fb0-ffd9-4846-abcd-31853537c2e8';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"b772d33d-d5e3-4c18-8ae4-5012e2c37b43","service":"chronocore-backend","timestamp":"2025-05-29 15:18:32"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-29 15:25:33"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-29 15:26:04"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-29 15:26:26"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-29 15:26:26"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-29 15:27:47"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-29 15:27:47"}
{"level":"info","message":"[9dc9ab1a-b152-41d2-91f8-fcc91eb89b77] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:36:53"}
{"level":"info","message":"[6996cc17-d52d-4761-83e2-2449c06b629e] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:37:09"}
{"level":"info","message":"[c644570b-3288-484a-9738-b701ba3fc869] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-29 15:37:44"}
{"level":"info","message":"Attempting to register user: shannu, kolashankar113@gmail.com","service":"chronocore-backend","timestamp":"2025-05-29 15:37:44"}
{"level":"info","message":"[2c00d14e-1627-4471-8d78-6390ad6aed85] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:37:45"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"2c00d14e-1627-4471-8d78-6390ad6aed85","service":"chronocore-backend","timestamp":"2025-05-29 15:37:46"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:37:46"}
{"level":"info","message":"[e8456aef-5897-4679-a600-381679d72936] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:37:46"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"e8456aef-5897-4679-a600-381679d72936","service":"chronocore-backend","timestamp":"2025-05-29 15:37:46"}
{"level":"info","message":"[c72814cb-78a1-4295-a04a-aa6f6716a055] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:37:54"}
{"level":"info","message":"[393aaee2-fbb8-4652-ab91-4f708f4b63db] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:37:54"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"393aaee2-fbb8-4652-ab91-4f708f4b63db","service":"chronocore-backend","timestamp":"2025-05-29 15:37:54"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:37:54"}
{"level":"info","message":"[eac3e1fb-46ae-437c-b678-a9d497d27152] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:37:54"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"eac3e1fb-46ae-437c-b678-a9d497d27152","service":"chronocore-backend","timestamp":"2025-05-29 15:37:54"}
{"level":"info","message":"[ef409486-c8f2-4c17-b683-f2d2e5542bc7] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:01"}
{"level":"info","message":"[fd873df4-ba39-46fe-b47d-24b7296e9559] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:02"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"fd873df4-ba39-46fe-b47d-24b7296e9559","service":"chronocore-backend","timestamp":"2025-05-29 15:38:02"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:02"}
{"level":"info","message":"[86940a67-4cd2-43d0-bb19-3834b94434c5] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:02"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"86940a67-4cd2-43d0-bb19-3834b94434c5","service":"chronocore-backend","timestamp":"2025-05-29 15:38:02"}
{"level":"info","message":"[f24eea59-2be2-49a4-ab0c-09a5679ce918] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:06"}
{"level":"info","message":"[7dcf8645-401b-4fa0-87fa-a3cdb2b930a2] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:06"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"7dcf8645-401b-4fa0-87fa-a3cdb2b930a2","service":"chronocore-backend","timestamp":"2025-05-29 15:38:06"}
{"level":"info","message":"[643e45ce-3776-4107-ae61-aac93cee65bf] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:07"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"643e45ce-3776-4107-ae61-aac93cee65bf","service":"chronocore-backend","timestamp":"2025-05-29 15:38:07"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:07"}
{"level":"info","message":"[f63c8bcd-b051-40f9-bb68-05d797194f61] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:12"}
{"level":"info","message":"[93662433-b741-4f1e-afa4-f49cb920b312] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:13"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"93662433-b741-4f1e-afa4-f49cb920b312","service":"chronocore-backend","timestamp":"2025-05-29 15:38:13"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:13"}
{"level":"info","message":"[92fa7cd0-e0f5-41b4-b4a0-307816d38cf8] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:13"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"92fa7cd0-e0f5-41b4-b4a0-307816d38cf8","service":"chronocore-backend","timestamp":"2025-05-29 15:38:13"}
{"level":"info","message":"[da517ea2-b103-45d6-92f7-a29ff88e5746] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:17"}
{"level":"info","message":"[1a3341ed-dc40-46b7-8d28-342c5890826f] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:17"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"1a3341ed-dc40-46b7-8d28-342c5890826f","service":"chronocore-backend","timestamp":"2025-05-29 15:38:17"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:17"}
{"level":"info","message":"[cec594d3-64ad-4c08-a46a-4a692e3cb768] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:17"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"cec594d3-64ad-4c08-a46a-4a692e3cb768","service":"chronocore-backend","timestamp":"2025-05-29 15:38:17"}
{"level":"info","message":"[4bde8c55-1b4b-4f8e-81ba-12fbc2b86cac] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:22"}
{"level":"info","message":"[7b36773a-d520-4163-abaa-c37025b406a7] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:22"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"7b36773a-d520-4163-abaa-c37025b406a7","service":"chronocore-backend","timestamp":"2025-05-29 15:38:22"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:22"}
{"level":"info","message":"[1da0f8fc-77b7-45d7-9225-c03eac12b7c1] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:22"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"1da0f8fc-77b7-45d7-9225-c03eac12b7c1","service":"chronocore-backend","timestamp":"2025-05-29 15:38:22"}
{"level":"info","message":"[962c5dcf-90f2-4623-9792-42f550edba63] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:26"}
{"level":"info","message":"[46f10061-b36c-4d67-b4b8-b6197a10616d] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:26"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"46f10061-b36c-4d67-b4b8-b6197a10616d","service":"chronocore-backend","timestamp":"2025-05-29 15:38:26"}
{"level":"info","message":"[a0e480c1-8fa3-43f7-8b2e-d4a1ecf1acc3] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:26"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"a0e480c1-8fa3-43f7-8b2e-d4a1ecf1acc3","service":"chronocore-backend","timestamp":"2025-05-29 15:38:26"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:26"}
{"level":"info","message":"[88e7c050-bfd2-4296-b815-fb15cb443a00] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:31"}
{"level":"info","message":"[253e7ebc-2b12-4746-979e-f4d533c9c46b] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:31"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"253e7ebc-2b12-4746-979e-f4d533c9c46b","service":"chronocore-backend","timestamp":"2025-05-29 15:38:31"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:31"}
{"level":"info","message":"[bdb94430-3000-446d-b5df-0034aeee2f48] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:31"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"bdb94430-3000-446d-b5df-0034aeee2f48","service":"chronocore-backend","timestamp":"2025-05-29 15:38:31"}
{"level":"info","message":"[69f3ce41-5d50-4d28-8e72-fa21f5504424] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:35"}
{"level":"info","message":"[e99757f6-6cce-461e-83a0-62c9bf666806] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:35"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"e99757f6-6cce-461e-83a0-62c9bf666806","service":"chronocore-backend","timestamp":"2025-05-29 15:38:35"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:35"}
{"level":"info","message":"[e0a38599-3804-4b04-b1ce-8484e32277a0] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:35"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"e0a38599-3804-4b04-b1ce-8484e32277a0","service":"chronocore-backend","timestamp":"2025-05-29 15:38:35"}
{"level":"info","message":"[6e1d5c0c-333a-41d5-a63e-bc6e5be32b83] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:38:41"}
{"level":"info","message":"[c5eb962f-b318-40d4-90eb-6ba622354032] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:41"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c5eb962f-b318-40d4-90eb-6ba622354032","service":"chronocore-backend","timestamp":"2025-05-29 15:38:41"}
{"level":"info","message":"[db422a95-6b82-46d3-be5b-bf03b4142df4] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:38:41"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"db422a95-6b82-46d3-be5b-bf03b4142df4","service":"chronocore-backend","timestamp":"2025-05-29 15:38:41"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:38:41"}
{"level":"info","message":"[30365ea0-5a75-4c0a-a3b9-1073d8749615] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-29 15:39:29"}
{"level":"info","message":"Attempting to register user: shannu, kolashankar113@gmail.com","service":"chronocore-backend","timestamp":"2025-05-29 15:39:29"}
{"level":"info","message":"[9ed732a8-9177-434d-90ba-4505c43c72ba] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:39:58"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"9ed732a8-9177-434d-90ba-4505c43c72ba","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 15:39:58"}
{"level":"info","message":"[426f5b29-a0ea-413f-ae86-98d6b9f76140] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:40:00"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"426f5b29-a0ea-413f-ae86-98d6b9f76140","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 15:40:00"}
{"level":"info","message":"[bea4ca5b-e1eb-4336-a713-f6f684a0e5f9] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:40:44"}
{"level":"info","message":"[752f9915-7312-4fe0-922b-b0d01c90e955] GET /api/auth/profile","service":"chronocore-backend","timestamp":"2025-05-29 15:42:31"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"752f9915-7312-4fe0-922b-b0d01c90e955","service":"chronocore-backend","timestamp":"2025-05-29 15:42:32"}
{"level":"info","message":"[aa017e57-1c33-4a95-bbb6-643fff004d89] GET /api/auth/profile","service":"chronocore-backend","timestamp":"2025-05-29 15:42:32"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"aa017e57-1c33-4a95-bbb6-643fff004d89","service":"chronocore-backend","timestamp":"2025-05-29 15:42:32"}
{"level":"info","message":"[dce6a839-a3c3-43d8-9166-74e9a0e65a23] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:42:43"}
{"level":"info","message":"[998dcac1-00a3-4ca9-a06c-2b0783407a71] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:42:44"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"998dcac1-00a3-4ca9-a06c-2b0783407a71","service":"chronocore-backend","timestamp":"2025-05-29 15:42:44"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:42:44"}
{"level":"info","message":"[0453bc5b-d433-4c89-9a5d-66bb46550a4d] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:42:44"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"0453bc5b-d433-4c89-9a5d-66bb46550a4d","service":"chronocore-backend","timestamp":"2025-05-29 15:42:44"}
{"level":"info","message":"[5bcdf019-9f7e-4a53-a3a7-47357028be78] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:43:00"}
{"level":"info","message":"[5d5f8c25-042c-431f-a5f1-96e3b165c87d] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:43:01"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"5d5f8c25-042c-431f-a5f1-96e3b165c87d","service":"chronocore-backend","timestamp":"2025-05-29 15:43:01"}
{"level":"info","message":"[229f1340-0b8a-4983-be35-2be9d77f8975] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:43:01"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"229f1340-0b8a-4983-be35-2be9d77f8975","service":"chronocore-backend","timestamp":"2025-05-29 15:43:01"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:43:01"}
{"level":"info","message":"[d53a6820-4abb-4a87-8d46-662742b9695f] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:43:06"}
{"level":"info","message":"[623af90e-b141-4ad8-a92e-b53b06169003] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:43:06"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"623af90e-b141-4ad8-a92e-b53b06169003","service":"chronocore-backend","timestamp":"2025-05-29 15:43:06"}
{"level":"info","message":"[2e29faf5-74cf-4741-9a6a-4fc6b971498f] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:43:06"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"2e29faf5-74cf-4741-9a6a-4fc6b971498f","service":"chronocore-backend","timestamp":"2025-05-29 15:43:06"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:43:06"}
{"level":"info","message":"[6e1c7c21-b420-45f2-9086-a0de5197bbb5] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:51:21"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:51:24"}
{"level":"info","message":"[bde564e1-f4aa-444c-9a9e-f4c86b01fb11] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:51:24"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"bde564e1-f4aa-444c-9a9e-f4c86b01fb11","service":"chronocore-backend","timestamp":"2025-05-29 15:51:24"}
{"level":"info","message":"[f3125f7f-912b-4d28-b9e2-59a06c6e3f13] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:51:24"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"f3125f7f-912b-4d28-b9e2-59a06c6e3f13","service":"chronocore-backend","timestamp":"2025-05-29 15:51:24"}
{"level":"info","message":"[99a7d094-275b-4619-b639-fce573bc4ce9] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:51:33"}
{"level":"info","message":"[e3a0a63c-e0c5-4b6e-a9a5-d6d0a887463a] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:51:34"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-29 15:51:34"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"e3a0a63c-e0c5-4b6e-a9a5-d6d0a887463a","service":"chronocore-backend","timestamp":"2025-05-29 15:51:34"}
{"level":"info","message":"[64842489-045e-47a6-a3c0-0e658f711d5d] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-29 15:51:35"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '8c0d7e81-caea-4796-95b5-2852c38e8754';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"64842489-045e-47a6-a3c0-0e658f711d5d","service":"chronocore-backend","timestamp":"2025-05-29 15:51:35"}
{"level":"info","message":"[68b52ce8-acb2-4de9-8aea-c7107626c197] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:52:00"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"68b52ce8-acb2-4de9-8aea-c7107626c197","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 15:52:00"}
{"level":"info","message":"[ee1799b0-f191-44d1-a684-86355fb74c18] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 15:53:34"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"ee1799b0-f191-44d1-a684-86355fb74c18","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 15:53:34"}
{"level":"info","message":"[15c43170-16b2-4d10-92df-1cb8c2d973f1] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 16:16:01"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"15c43170-16b2-4d10-92df-1cb8c2d973f1","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 16:16:04"}
{"level":"info","message":"[cdf0ee6d-6bb0-4387-818f-9b88e21caed1] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 16:16:08"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"cdf0ee6d-6bb0-4387-818f-9b88e21caed1","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 16:16:08"}
{"level":"info","message":"[04dbad94-55b7-41c3-b676-3074d15068a2] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 16:16:10"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"04dbad94-55b7-41c3-b676-3074d15068a2","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 16:16:10"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-29 16:24:35"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-29 16:25:40"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-29 16:26:05"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-29 16:26:05"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-29 16:26:41"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-29 16:26:41"}
{"level":"info","message":"[507377ae-2094-42a9-9135-c9ae1dffd529] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-29 16:28:47"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"507377ae-2094-42a9-9135-c9ae1dffd529","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-29 16:28:47"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-29 16:35:07"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-29 16:35:30"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-29 16:35:30"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-29 16:35:30"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-29 16:35:34"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-29 16:35:34"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 04:05:14"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 04:05:20"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 04:05:23"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 04:05:23"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/app/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/app/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/app/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/app/src/index.js:86:5)","timestamp":"2025-05-30 04:05:30"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/app/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/app/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/app/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/app/src/index.js:86:5)","timestamp":"2025-05-30 04:05:30"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 14:16:59"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 14:17:46"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 14:18:07"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 14:18:07"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 14:18:35"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 14:18:35"}
{"level":"info","message":"[f0983258-653a-411a-ab04-d45ed6f33fe0] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-30 14:26:14"}
{"level":"info","message":"Attempting to register user: shannu, kolashankar113@gmail.com","service":"chronocore-backend","timestamp":"2025-05-30 14:26:16"}
{"level":"info","message":"[767d1d4b-ccdb-4752-98d7-58c47056cce5] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:38"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:26:38"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"767d1d4b-ccdb-4752-98d7-58c47056cce5","service":"chronocore-backend","timestamp":"2025-05-30 14:26:38"}
{"level":"info","message":"[f551eb3a-7b83-4644-a9fa-8aaeab65d8a2] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:38"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"f551eb3a-7b83-4644-a9fa-8aaeab65d8a2","service":"chronocore-backend","timestamp":"2025-05-30 14:26:39"}
{"level":"info","message":"[f2c91c9c-d6f9-428b-ac09-37af081e2578] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 14:26:49"}
{"level":"info","message":"[890adeb5-4ead-427f-9d26-8e05fc6d0f62] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:49"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"890adeb5-4ead-427f-9d26-8e05fc6d0f62","service":"chronocore-backend","timestamp":"2025-05-30 14:26:49"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:26:49"}
{"level":"info","message":"[d6559dde-aadd-4b5c-b764-18d2e5ba0cd3] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:49"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"d6559dde-aadd-4b5c-b764-18d2e5ba0cd3","service":"chronocore-backend","timestamp":"2025-05-30 14:26:49"}
{"level":"info","message":"[dcd9fda5-2da7-4bd6-acf6-f33da4584361] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 14:26:54"}
{"level":"info","message":"[52736b95-9b2b-46ae-b225-a53bad6109d3] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:54"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:26:55"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"52736b95-9b2b-46ae-b225-a53bad6109d3","service":"chronocore-backend","timestamp":"2025-05-30 14:26:55"}
{"level":"info","message":"[c3952f1c-a89e-4dc1-9ade-50dec1abcda7] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:55"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c3952f1c-a89e-4dc1-9ade-50dec1abcda7","service":"chronocore-backend","timestamp":"2025-05-30 14:26:55"}
{"level":"info","message":"[8936c716-2ef9-4337-adcf-a3cb44f217b9] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 14:26:59"}
{"level":"info","message":"[53de81c3-ed05-4fd2-9a74-7b9e327b1d40] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:59"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:26:59"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"53de81c3-ed05-4fd2-9a74-7b9e327b1d40","service":"chronocore-backend","timestamp":"2025-05-30 14:26:59"}
{"level":"info","message":"[9ff8444c-f41b-4abf-b625-8d6775bb91e9] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:26:59"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"9ff8444c-f41b-4abf-b625-8d6775bb91e9","service":"chronocore-backend","timestamp":"2025-05-30 14:26:59"}
{"level":"info","message":"[51e7dbe0-d230-478e-8cbc-7fdd55aa47dc] GET /","service":"chronocore-backend","timestamp":"2025-05-30 14:27:23"}
{"level":"info","message":"[89680c33-1bbe-4797-abcd-f4faea181f29] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 14:29:01"}
{"level":"info","message":"[549825a8-819b-47e1-9056-01060d524c8d] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 14:31:47"}
{"level":"info","message":"[d68f21ca-8eb6-4350-af9e-7a27490a3254] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:31:48"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"d68f21ca-8eb6-4350-af9e-7a27490a3254","service":"chronocore-backend","timestamp":"2025-05-30 14:31:48"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:31:48"}
{"level":"info","message":"[93a0a627-31e4-4937-882a-75723a3eeaca] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:31:48"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"93a0a627-31e4-4937-882a-75723a3eeaca","service":"chronocore-backend","timestamp":"2025-05-30 14:31:48"}
{"level":"info","message":"[30292545-6e9e-443f-8087-26dfeb28e7a5] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 14:31:52"}
{"level":"info","message":"[0c867c68-e8ff-462a-ac23-a3ea2a8ac12a] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:31:53"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"0c867c68-e8ff-462a-ac23-a3ea2a8ac12a","service":"chronocore-backend","timestamp":"2025-05-30 14:31:53"}
{"level":"info","message":"[14a97def-1540-4b02-9726-800c404a6d14] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:31:53"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:31:53"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"14a97def-1540-4b02-9726-800c404a6d14","service":"chronocore-backend","timestamp":"2025-05-30 14:31:53"}
{"level":"info","message":"[59d7d9c2-01d4-47c1-8a36-993dd8cc24ca] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 14:32:06"}
{"level":"info","message":"[bd4014c6-717f-48ae-aac4-ceafb80a091d] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:32:07"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"bd4014c6-717f-48ae-aac4-ceafb80a091d","service":"chronocore-backend","timestamp":"2025-05-30 14:32:07"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 14:32:07"}
{"level":"info","message":"[7686795c-1031-4f7e-8a7f-fe04ef9edc18] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 14:32:07"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = '717174e8-4c75-4610-a2fb-c2d812f17337';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"7686795c-1031-4f7e-8a7f-fe04ef9edc18","service":"chronocore-backend","timestamp":"2025-05-30 14:32:07"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 17:07:55"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 17:08:04"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 17:08:08"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 17:08:08"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 17:08:12"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 17:08:12"}
{"level":"info","message":"[b949149c-6565-4aae-b65b-bcf27df2c12d] POST /api/auth/register","service":"chronocore-backend","timestamp":"2025-05-30 17:09:58"}
{"level":"info","message":"Attempting to register user: shannu, kolashankar113@gmail.com","service":"chronocore-backend","timestamp":"2025-05-30 17:09:58"}
{"level":"info","message":"[87c13503-5d67-426f-b27b-b88ea61d5227] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:00"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 17:10:00"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"87c13503-5d67-426f-b27b-b88ea61d5227","service":"chronocore-backend","timestamp":"2025-05-30 17:10:00"}
{"level":"info","message":"[6ecdc635-3a8e-4f05-9de2-3b91b7186cf9] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:00"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"6ecdc635-3a8e-4f05-9de2-3b91b7186cf9","service":"chronocore-backend","timestamp":"2025-05-30 17:10:00"}
{"level":"info","message":"[262e5fe6-2342-433f-a05a-33c46a59695c] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 17:10:26"}
{"level":"info","message":"[15d3c783-8638-4886-b769-14146c7d2d85] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:29"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"15d3c783-8638-4886-b769-14146c7d2d85","service":"chronocore-backend","timestamp":"2025-05-30 17:10:29"}
{"level":"info","message":"[aa4e000c-0959-4602-a44e-676bb121a86e] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:29"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"aa4e000c-0959-4602-a44e-676bb121a86e","service":"chronocore-backend","timestamp":"2025-05-30 17:10:29"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 17:10:29"}
{"level":"info","message":"[08026736-fc43-455f-a51d-7f804dbfcbe6] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 17:10:36"}
{"level":"info","message":"[49571332-d8c3-4687-9fdd-f2fec8b910ab] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:37"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"49571332-d8c3-4687-9fdd-f2fec8b910ab","service":"chronocore-backend","timestamp":"2025-05-30 17:10:37"}
{"level":"info","message":"[aec261e1-1f7e-4627-ac3e-3de1290e459e] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:37"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"aec261e1-1f7e-4627-ac3e-3de1290e459e","service":"chronocore-backend","timestamp":"2025-05-30 17:10:37"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 17:10:37"}
{"level":"info","message":"[61844e35-e8bb-45f6-a4a4-84abd72d300a] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 17:10:43"}
{"level":"info","message":"[17a41a6e-ead7-414f-a22d-70c79c26e15a] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:44"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"17a41a6e-ead7-414f-a22d-70c79c26e15a","service":"chronocore-backend","timestamp":"2025-05-30 17:10:44"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 17:10:44"}
{"level":"info","message":"[c27ed99a-9c03-4abc-b143-d9c934481562] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:44"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c27ed99a-9c03-4abc-b143-d9c934481562","service":"chronocore-backend","timestamp":"2025-05-30 17:10:44"}
{"level":"info","message":"[0575d1e5-4ee8-4933-b408-b4aaded785fb] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 17:10:49"}
{"level":"info","message":"[15e686a7-688c-460e-9f31-2d519d6b9f90] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:49"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"15e686a7-688c-460e-9f31-2d519d6b9f90","service":"chronocore-backend","timestamp":"2025-05-30 17:10:49"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 17:10:49"}
{"level":"info","message":"[999904d8-1b01-4442-bba0-433d8741b5ab] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:49"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"999904d8-1b01-4442-bba0-433d8741b5ab","service":"chronocore-backend","timestamp":"2025-05-30 17:10:49"}
{"level":"info","message":"[e181ef92-a655-432c-8cfa-bd1ac850ad20] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 17:10:56"}
{"level":"info","message":"[c4b56285-a215-4d31-a4c4-acc30bad10f5] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:57"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"c4b56285-a215-4d31-a4c4-acc30bad10f5","service":"chronocore-backend","timestamp":"2025-05-30 17:10:57"}
{"level":"info","message":"[7f33eb8a-5548-41b0-8029-3e84c9a3c800] GET /api/game","service":"chronocore-backend","timestamp":"2025-05-30 17:10:57"}
{"error":{"name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"level":"error","message":"Authentication error: relation \"Users\" does not exist","requestId":"7f33eb8a-5548-41b0-8029-3e84c9a3c800","service":"chronocore-backend","timestamp":"2025-05-30 17:10:57"}
{"level":"error","message":"Socket authentication error: relation \"Users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":105,"line":"1449","name":"error","position":"187","routine":"parserOpenTable","severity":"ERROR","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';"},"service":"chronocore-backend","sql":"SELECT \"id\", \"username\", \"email\", \"password\", \"role\", \"profilePicture\", \"bio\", \"preferredRole\", \"totalGamesPlayed\", \"totalWins\", \"karmaScore\", \"lastLogin\", \"createdAt\", \"updatedAt\" FROM \"Users\" AS \"User\" WHERE \"User\".\"id\" = 'fee27bf9-a5ce-4321-87d4-ebb281bc6233';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async User.findAll (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1140:21)\n    at async User.findOne (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1240:12)\n    at async User.findByPk (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1221:12)\n    at async Array.<anonymous> (/home/lenovo/game/backend/src/socket/socketManager.js:33:20)","timestamp":"2025-05-30 17:10:58"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 17:51:01"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 17:51:15"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 17:51:22"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 17:51:22"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 17:51:52"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 17:51:52"}
{"level":"info","message":"[9429faf3-16ca-4473-9306-3b0e41bd8bb5] GET /","service":"chronocore-backend","timestamp":"2025-05-30 17:56:00"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 18:12:04"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 18:12:22"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 18:12:33"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 18:12:33"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 18:12:43"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 18:12:43"}
{"level":"info","message":"[d508cf72-3113-4538-bc46-18a025e23099] GET /","service":"chronocore-backend","timestamp":"2025-05-30 18:20:48"}
{"level":"info","message":"[7d00de05-b9f4-4670-a9e9-5ba1a738c7e1] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 18:21:01"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 18:34:50"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 18:35:24"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 18:35:30"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 18:35:30"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 18:35:41"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 18:35:41"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 18:35:44"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 18:35:45"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 18:35:46"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 18:35:46"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 18:35:48"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 18:35:48"}
{"level":"info","message":"[89179b52-3dae-42ac-b39e-25dc0513e958] GET /","service":"chronocore-backend","timestamp":"2025-05-30 18:42:37"}
{"level":"info","message":"[56b14746-49d3-4c6b-b74e-14d8e9d56adf] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 18:43:02"}
{"level":"info","message":"[e94f80bb-bb9b-4e62-b662-0d5fa7503dde] GET /","service":"chronocore-backend","timestamp":"2025-05-30 18:43:11"}
{"level":"info","message":"[0fd6451b-5075-4dea-9155-2d7b81d88f5e] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 18:43:11"}
{"level":"info","message":"[01130d67-0ef9-4850-91e3-a92a1b007f31] GET /","service":"chronocore-backend","timestamp":"2025-05-30 18:43:16"}
{"level":"info","message":"[9fab0bb5-77d0-4888-b623-11a8aa54c93e] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 18:43:16"}
{"level":"info","message":"[c4287f86-b816-4bd3-aca9-d7c4722c4927] GET /","service":"chronocore-backend","timestamp":"2025-05-30 18:43:19"}
{"level":"info","message":"[7e7ebd44-2178-4743-be92-e974f8bb56c4] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 18:43:19"}
{"level":"info","message":"[c89275f3-35f1-4c28-9c43-b6eb6304a1db] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 18:44:31"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"c89275f3-35f1-4c28-9c43-b6eb6304a1db","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-30 18:44:47"}
{"level":"info","message":"[4345f73d-52ad-45e5-bf6e-0002e723697c] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 18:45:18"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"4345f73d-52ad-45e5-bf6e-0002e723697c","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-30 18:45:18"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 20:35:30"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 20:35:45"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 20:35:50"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 20:35:50"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 20:36:02"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 20:36:02"}
{"level":"info","message":"[5510ac1e-5e11-4db4-8776-dc866af737c1] GET /","service":"chronocore-backend","timestamp":"2025-05-30 20:42:55"}
{"level":"info","message":"[0f43a418-6741-4b9d-a904-25052e125109] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 20:43:13"}
{"level":"info","message":"[15545731-c566-4260-8f91-60abba5153a4] GET /","service":"chronocore-backend","timestamp":"2025-05-30 20:43:22"}
{"level":"info","message":"[602d6b2c-d0d6-4a31-ad2b-49c790af2ef1] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 20:43:22"}
{"level":"info","message":"[56505117-c590-4737-856c-1816150d0190] GET /","service":"chronocore-backend","timestamp":"2025-05-30 20:43:24"}
{"level":"info","message":"[6d6ae024-a017-4b99-9b06-b763f4705563] GET /.well-known/appspecific/com.chrome.devtools.json","service":"chronocore-backend","timestamp":"2025-05-30 20:43:24"}
{"level":"info","message":"[4259b36d-5cd5-45fc-a8a4-44f27baadbd2] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 20:43:37"}
{"level":"info","message":"[f70a3277-d91b-4b00-a0d0-69d2acfcc23d] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 20:44:02"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"f70a3277-d91b-4b00-a0d0-69d2acfcc23d","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-30 20:44:02"}
{"level":"info","message":"[5b3fd969-edbb-45c5-974e-a8543fc217ba] POST /api/auth/login","service":"chronocore-backend","timestamp":"2025-05-30 20:44:08"}
{"ip":"::1","level":"error","message":"Error: WHERE parameter \"username\" has invalid \"undefined\" value","method":"POST","path":"/api/auth/login","requestId":"5b3fd969-edbb-45c5-974e-a8543fc217ba","service":"chronocore-backend","stack":"Error: WHERE parameter \"username\" has invalid \"undefined\" value\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1746:13)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)\n    at PostgresQueryGenerator.whereItemsQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1735:35)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1843:30\n    at Array.map (<anonymous>)\n    at PostgresQueryGenerator._whereGroupBind (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1842:21)\n    at PostgresQueryGenerator.whereItemQuery (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1793:19)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-generator.js:1737:25\n    at Array.forEach (<anonymous>)","timestamp":"2025-05-30 20:44:08"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 21:09:13"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 21:09:39"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 21:09:51"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:68:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 21:09:57"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:68:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 21:09:57"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 21:20:02"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 21:20:06"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 21:20:07"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:68:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 21:20:07"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:68:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 21:20:07"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-30 22:35:30"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-30 22:35:32"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-30 22:35:33"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-30 22:35:33"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 22:35:34"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-30 22:35:34"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-31 03:32:17"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-31 03:32:22"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-31 03:32:24"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-31 03:32:24"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/app/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/app/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/app/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/app/src/index.js:86:5)","timestamp":"2025-05-31 03:32:28"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/app/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/app/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/app/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/app/src/index.js:86:5)","timestamp":"2025-05-31 03:32:28"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-31 06:54:33"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-31 06:54:34"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-31 06:54:36"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-31 06:54:36"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/app/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/app/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/app/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/app/src/index.js:86:5)","timestamp":"2025-05-31 06:54:37"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"433","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/app/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/app/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/app/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/app/src/index.js:86:5)","timestamp":"2025-05-31 06:54:37"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-31 13:19:18"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-31 13:19:19"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-31 13:19:21"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:68:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-31 13:19:22"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:68:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-31 13:19:22"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-05-31 13:20:50"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-05-31 13:20:54"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-05-31 13:20:54"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-05-31 13:20:54"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-31 13:20:55"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"players\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"role\" \"public\".\"enum_players_role\" NOT NULL, \"name\" VARCHAR(255) NOT NULL, \"avatar\" VARCHAR(255), \"karma\" INTEGER DEFAULT 0, \"resources\" INTEGER DEFAULT 50, \"isActive\" BOOLEAN DEFAULT true, \"isReady\" BOOLEAN DEFAULT false, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"aiPlayerId\" VARCHAR(255) , \"stats\" JSONB DEFAULT '{\"questsCompleted\":0,\"decisionsCount\":0,\"realmsControlled\":0,\"timeRiftsResolved\":0}', \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"deletedAt\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\")); COMMENT ON COLUMN \"players\".\"aiPlayerId\" IS 'Reference to the player in the AI engine';","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async Player.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async Sequelize.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:64:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-05-31 13:20:55"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 08:44:19"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 08:44:20"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 08:44:21"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-06-01 08:44:21"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async GamePlayer.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:25:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 08:44:22"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async GamePlayer.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:25:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 08:44:22"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 10:29:42"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 10:29:53"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 10:29:57"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-06-01 10:29:57"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async GamePlayer.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:25:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:30:02"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async GamePlayer.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:25:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:30:02"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 10:34:58"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 10:35:00"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 10:35:00"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-06-01 10:35:00"}
{"level":"error","message":"Unable to connect to PostgreSQL database: Cannot set properties of undefined (setting 'supportsSearchPath')","service":"chronocore-backend","stack":"TypeError: Cannot set properties of undefined (setting 'supportsSearchPath')\n    at PostgresQueryInterface.dropTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query-interface.js:163:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async GamePlayer.drop (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1007:12)\n    at async Promise.all (index 3)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:24:7)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:35:00"}
{"level":"error","message":"Failed to connect to databases: Cannot set properties of undefined (setting 'supportsSearchPath')","service":"chronocore-backend","stack":"TypeError: Cannot set properties of undefined (setting 'supportsSearchPath')\n    at PostgresQueryInterface.dropTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query-interface.js:163:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async GamePlayer.drop (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1007:12)\n    at async Promise.all (index 3)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:24:7)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:35:00"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 10:38:34"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 10:38:35"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 10:38:35"}
{"level":"warn","message":"Forcing database sync - all tables will be dropped and recreated","service":"chronocore-backend","timestamp":"2025-06-01 10:38:35"}
{"level":"error","message":"Unable to connect to PostgreSQL database: Cannot set properties of undefined (setting 'supportsSearchPath')","service":"chronocore-backend","stack":"TypeError: Cannot set properties of undefined (setting 'supportsSearchPath')\n    at PostgresQueryInterface.dropTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query-interface.js:163:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async GamePlayer.drop (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1007:12)\n    at async Promise.all (index 3)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:24:7)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:38:35"}
{"level":"error","message":"Failed to connect to databases: Cannot set properties of undefined (setting 'supportsSearchPath')","service":"chronocore-backend","stack":"TypeError: Cannot set properties of undefined (setting 'supportsSearchPath')\n    at PostgresQueryInterface.dropTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query-interface.js:163:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async GamePlayer.drop (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:1007:12)\n    at async Promise.all (index 3)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:24:7)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:67:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:38:35"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 10:43:07"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 10:43:08"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 10:43:08"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async GamePlayer.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:44:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:71:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:43:08"}
{"level":"error","message":"Failed to connect to databases: relation \"games\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"GamePlayers\" (\"id\" UUID , \"gameId\" UUID NOT NULL REFERENCES \"games\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"userId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"role\" \"public\".\"enum_GamePlayers_role\" NOT NULL, \"karma\" INTEGER DEFAULT 0, \"ownedRealms\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"techLevel\" INTEGER DEFAULT 1, \"unlockedTechnologies\" VARCHAR(255)[] DEFAULT ARRAY[]::VARCHAR(255)[], \"currentResearch\" VARCHAR(255), \"researchProgress\" INTEGER DEFAULT 0, \"inventory\" JSON DEFAULT '{}', \"isReady\" BOOLEAN DEFAULT false, \"isWinner\" BOOLEAN DEFAULT false, \"isActive\" BOOLEAN DEFAULT true, \"lastAction\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async GamePlayer.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:44:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:71:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:43:08"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 10:50:54"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 10:50:58"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 10:50:59"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async games.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:36:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:71:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:50:59"}
{"level":"error","message":"Failed to connect to databases: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async games.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:36:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:71:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 10:50:59"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 11:37:12"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 11:37:29"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 11:37:42"}
{"level":"error","message":"Unable to connect to PostgreSQL database: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async games.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:50:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:71:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 11:38:05"}
{"level":"error","message":"Failed to connect to databases: relation \"users\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"636","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"service":"chronocore-backend","sql":"CREATE TABLE IF NOT EXISTS \"games\" (\"id\" UUID , \"name\" VARCHAR(255) NOT NULL, \"creatorId\" UUID NOT NULL REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE CASCADE, \"status\" \"public\".\"enum_games_status\" DEFAULT 'waiting', \"currentEra\" \"public\".\"enum_games_currentEra\" DEFAULT 'Initiation', \"currentTurn\" INTEGER DEFAULT 0, \"currentPlayerIndex\" INTEGER DEFAULT 0, \"maxPlayers\" INTEGER DEFAULT 4, \"password\" VARCHAR(255), \"isPrivate\" BOOLEAN DEFAULT false, \"winCondition\" VARCHAR(255) DEFAULT 'Equilibrium', \"globalKarma\" INTEGER DEFAULT 0, \"boardConfig\" JSON, \"startedAt\" TIMESTAMP WITH TIME ZONE, \"endedAt\" TIMESTAMP WITH TIME ZONE, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /home/lenovo/game/backend/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.createTable (/home/lenovo/game/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)\n    at async games.sync (/home/lenovo/game/backend/node_modules/sequelize/lib/model.js:942:7)\n    at async syncModels (/home/lenovo/game/backend/src/models/index.js:50:5)\n    at async connectPostgres (/home/lenovo/game/backend/src/config/postgres.config.js:71:9)\n    at async Server.<anonymous> (/home/lenovo/game/backend/src/index.js:86:5)","timestamp":"2025-06-01 11:38:05"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 11:43:13"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 11:43:23"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 11:43:25"}
{"level":"info","message":"Database models synchronized with alter mode","service":"chronocore-backend","timestamp":"2025-06-01 11:44:17"}
{"level":"info","message":"MongoDB connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 11:44:20"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-06-01 11:44:20"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-01 11:54:10"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-01 11:54:25"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 11:54:27"}
{"level":"info","message":"Database models synchronized with alter mode","service":"chronocore-backend","timestamp":"2025-06-01 11:54:27"}
{"level":"info","message":"MongoDB connection established successfully","service":"chronocore-backend","timestamp":"2025-06-01 11:54:33"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-06-01 11:54:33"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-02 08:07:00"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-02 08:07:23"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-02 08:07:50"}
{"level":"info","message":"Database models synchronized with alter mode","service":"chronocore-backend","timestamp":"2025-06-02 08:07:53"}
{"level":"info","message":"MongoDB connection established successfully","service":"chronocore-backend","timestamp":"2025-06-02 08:07:57"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-06-02 08:07:57"}
{"level":"info","message":"[defbba81-365e-4a92-85ce-25697f6773b9] GET /","service":"chronocore-backend","timestamp":"2025-06-02 08:33:31"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-02 16:34:01"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-02 16:34:31"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-02 16:34:51"}
{"level":"info","message":"Database models synchronized with alter mode","service":"chronocore-backend","timestamp":"2025-06-02 16:34:56"}
{"level":"info","message":"MongoDB connection established successfully","service":"chronocore-backend","timestamp":"2025-06-02 16:34:58"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-06-02 16:34:58"}
{"level":"info","message":"Using DATABASE_URL for PostgreSQL connection","service":"chronocore-backend","timestamp":"2025-06-02 17:05:14"}
{"level":"info","message":"Server running on port 5000","service":"chronocore-backend","timestamp":"2025-06-02 17:05:48"}
{"level":"info","message":"PostgreSQL connection established successfully","service":"chronocore-backend","timestamp":"2025-06-02 17:06:02"}
{"level":"info","message":"Database models synchronized with alter mode","service":"chronocore-backend","timestamp":"2025-06-02 17:06:08"}
{"level":"info","message":"MongoDB connection established successfully","service":"chronocore-backend","timestamp":"2025-06-02 17:06:09"}
{"level":"info","message":"Database connections established","service":"chronocore-backend","timestamp":"2025-06-02 17:06:09"}
